name: Sweeper Smackdown Deployment

on:
  push:
    branches:
      - production
      - main
      - deployment # temporary
  workflow_dispatch:

env:
  ENVIRONMENT: ${{ github.ref == 'refs/heads/production' && 'prod' || 'dev' }}
  REGION: eastus2
  DISCORD_CLIENT_ID: 1224239153831608340 # TODO: Handle dev/prod
  DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }} # TODO: Handle dev/prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      # - name: Test project
      #   run: |
      #     dotnet test --configuration Release

      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build infrastructure with Bicep
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          scope: "subscription"
          template: .bicep/main.bicep
          parameters: "environment=${{ env.ENVIRONMENT }} location=${{ env.REGION }} bearerTokenSecretKey=${{ secrets.BEARER_TOKEN_SECRET_KEY }} discordClientId=${{ env.DISCORD_CLIENT_ID }} discordClientSecret=${{ env.DISCORD_CLIENT_SECRET }}"
          failOnStdErr: false
          region: ${{ env.REGION }}

      - name: Get deployment token for SWA
        run: |
          echo "DEPLOYMENT_TOKEN=$(az staticwebapp secrets list --name swa-sweepersmackdown-${{ env.ENVIRONMENT }} --query 'properties.apiKey' | tr -d '"')" >> $GITHUB_ENV

      - name: Deploy SWA
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/app"
          api_location: ""
          output_location: "/dist"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLIC_ENV__DISCORD_CLIENT_ID: ${{ env.DISCORD_CLIENT_ID }}
          PUBLIC_ENV__API_BASE_URL: https://${{ steps.deploy.outputs.functionAppDefaultHostName }}

      - name: Create zip and prepare for deployment
        run: |
          cd ./api
          dotnet publish --configuration Release --output ./output --self-contained
          cd ./output
          zip -r ../deploy.zip .
          cd ../..

      - name: Upload zip artifact for API
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ github.sha }}
          path: ./deploy.zip

      - name: Deploy API through Azure CLI
        run: |
          SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          az functionapp deployment source config-zip --subscription $SUBSCRIPTION_ID -g ${{ steps.deploy.outputs.resourceGroupName }} -n ${{ steps.deploy.outputs.functionAppName }} --src ./api/deploy.zip

      - name: Log out of Azure
        run: |
          az logout

      - name: Show default address
        run: |
          echo "Deployment successful! Game can be played at https://${{ steps.deploy.outputs.staticWebAppDefaultHostName }}"
