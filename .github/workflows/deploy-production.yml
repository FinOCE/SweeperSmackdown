name: Deploy Production

on:
  push:
    branches:
      - production
  workflow_dispatch:

env:
  REGION: ${{ vars.REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    env:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENVIRONMENT: ${{ vars.ENVIRONMENT_NAME }}
      BEARER_TOKEN_SECRET_KEY: ${{ secrets.BEARER_TOKEN_SECRET_KEY }}
      DISCORD_CLIENT_ID: ${{ vars.DISCORD_CLIENT_ID }}
      DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
      DISCORD_PUBLIC_KEY: ${{ vars.DISCORD_PUBLIC_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      # - name: Test API project
      #   run: |
      #     pushd ./api
      #     dotnet test --configuration Release
      #     popd

      - name: Test bot project
        run: |
          pushd ./bot
          dotnet test --configuration Release
          popd

      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Build infrastructure with Bicep
        id: bicep
        uses: azure/arm-deploy@v1
        with:
          scope: "subscription"
          template: .bicep/main.bicep
          parameters: "environment=${{ env.ENVIRONMENT }} location=${{ env.REGION }} bearerTokenSecretKey=${{ env.BEARER_TOKEN_SECRET_KEY }} discordClientId=${{ env.DISCORD_CLIENT_ID }} discordClientSecret=${{ env.DISCORD_CLIENT_SECRET }} discordPublicKey=${{ env.DISCORD_PUBLIC_KEY }}"
          failOnStdErr: false
          region: ${{ env.REGION }}

      - name: Get subscription ID
        id: get-subscription-id
        run: |
          SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          echo "::add-mask::$SUBSCRIPTION_ID"
          echo "SUBSCRIPTION_ID=$SUBSCRIPTION_ID" >> "$GITHUB_OUTPUT"

      - name: Build SWA
        id: build-swa
        run: |
          pushd ./app
          touch .env
          echo "PUBLIC_ENV__DISCORD_CLIENT_ID=${{ env.DISCORD_CLIENT_ID }}" >> .env
          echo "PUBLIC_ENV__API_BASE_URL=https://${{ steps.bicep.outputs.apiFunctionAppDefaultHostName }}" >> .env
          npm ci
          npm run build
          popd

          SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list --name ${{ steps.bicep.outputs.staticWebAppName }} --query 'properties.apiKey' | tr -d '"')
          echo "::add-mask::$SWA_DEPLOYMENT_TOKEN"
          echo "SWA_DEPLOYMENT_TOKEN=$SWA_DEPLOYMENT_TOKEN" >> "$GITHUB_OUTPUT"

      - name: Deploy SWA
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.build-swa.outputs.SWA_DEPLOYMENT_TOKEN }}
          repo_token: ${{ env.GITHUB_TOKEN }}
          action: "upload"
          app_location: "app/dist"
          api_location: ""
          output_location: ""
          skip_app_build: true
        env:
          NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: Create and deploy API
        run: |
          cd ./api
          dotnet publish --configuration Release --output ./output --self-contained -r win-x64
          cd ./output
          zip -r ../deploy.zip .
          cd ../..

          az functionapp deployment source config-zip --subscription ${{ steps.get-subscription-id.outputs.SUBSCRIPTION_ID }} -g ${{ steps.bicep.outputs.resourceGroupName }} -n ${{ steps.bicep.outputs.apiFunctionAppName }} --src ./api/deploy.zip

      - name: Create and deploy bot
        run: |
          cd ./bot
          dotnet publish --configuration Release --output ./output --self-contained -r linux-x64
          cd ./output
          zip -r ../deploy.zip .
          cd ../..

          az functionapp deployment source config-zip --subscription ${{ steps.get-subscription-id.outputs.SUBSCRIPTION_ID }} -g ${{ steps.bicep.outputs.resourceGroupName }} -n ${{ steps.bicep.outputs.botFunctionAppName }} --src ./bot/deploy.zip

      - name: Log out of Azure
        run: |
          az logout

      - name: Show default address
        run: |
          echo "Deployment successful!"
          echo "App static web app default host name: ${{ steps.bicep.outputs.staticWebAppDefaultHostName }}"
          echo "API function app default host name: ${{ steps.bicep.outputs.apiFunctionAppDefaultHostName }}"
          echo "Web PubSub default host name: ${{ steps.bicep.outputs.webPubSubDefaultHostName }}"
          echo "Bot function app default host name: ${{ steps.bicep.outputs.botFunctionAppDefaultHostName }}"
